{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport EmojiPicker from 'emoji-picker-react';\nimport './ChatRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  username,\n  recipient\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [userStatus, setUserStatus] = useState(\"🟢 Active now\");\n  const stompClientRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const latestMessageRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const updateUserStatus = () => {\n    setUserStatus(\"🟢 Active now\"); // Reset to active\n    clearTimeout(window.statusTimer);\n\n    // Set \"Away\" after 60 seconds of inactivity\n    window.statusTimer = setTimeout(() => {\n      setUserStatus(\"🟡 Away\");\n    }, 60000);\n  };\n\n  // Set \"Offline\" when user leaves\n  const setOfflineStatus = () => setUserStatus(\"🔴 Offline\");\n  useEffect(() => {\n    const connectWebSocket = () => {\n      const socket = new SockJS(\"http://localhost:8080/chat\");\n      const client = Stomp.over(socket);\n      client.connect({}, () => {\n        console.log(\"Connected to WebSocket\");\n        const topic = recipient ? `/topic/private/${recipient}` : `/topic/messages`;\n        client.subscribe(topic, msg => {\n          const receivedMessage = JSON.parse(msg.body);\n          setMessages(prev => [...prev, {\n            username: receivedMessage.username,\n            message: receivedMessage.message,\n            timestamp: receivedMessage.timestamp || new Date().toLocaleTimeString(),\n            status: receivedMessage.status\n          }]);\n        });\n        stompClientRef.current = client;\n        setIsConnected(true);\n        const intervalId = setInterval(() => {\n          fetch(\"http://localhost:8080/active-users\").then(res => res.json()).then(data => setActiveUsers(data)).catch(error => console.error(\"❌ Failed to fetch active users:\", error));\n        }, 5000);\n        return () => clearInterval(intervalId);\n      });\n    };\n    connectWebSocket();\n    return () => {\n      if (stompClientRef.current) {\n        stompClientRef.current.disconnect();\n        console.log(\"❌ Disconnected from WebSocket\");\n      }\n    };\n  }, [recipient]);\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [messages]);\n\n  // 🎤 Speech Recognition Setup\n  const toggleVoiceRecording = () => {\n    if (!isRecording) {\n      if (!window.SpeechRecognition && !window.webkitSpeechRecognition) {\n        alert(\"Your browser does not support speech recognition.\");\n        return;\n      }\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.lang = \"en-US\";\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.onstart = () => setIsRecording(true);\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setMessage(transcript);\n      };\n      recognition.onerror = event => console.error(\"Speech recognition error:\", event.error);\n      recognition.onend = () => setIsRecording(false);\n      recognition.start();\n      recognitionRef.current = recognition;\n    } else {\n      var _recognitionRef$curre;\n      (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n      setIsRecording(false);\n    }\n  };\n\n  // ✅ Send message function is now used in the input field\n  const sendMessage = () => {\n    if (stompClientRef.current && stompClientRef.current.connected) {\n      const chatMessage = {\n        username: username || \"Anonymous\",\n        message: message || \"Empty message\",\n        recipient: recipient || \"\",\n        timestamp: new Date().toLocaleTimeString(),\n        status: \"Sent\"\n      };\n      stompClientRef.current.send(\"/app/sendMessage\", {}, JSON.stringify(chatMessage));\n      setMessage(\"\");\n    } else {\n      console.error(\"❌ WebSocket is not connected!\");\n      alert(\"Failed to send message. Connection not established.\");\n    }\n  };\n  const handleMediaUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const fileURL = URL.createObjectURL(file);\n    setMessages(prev => [...prev, {\n      username,\n      message: `📎 Sent an attachment`,\n      media: fileURL,\n      timestamp: new Date().toLocaleTimeString(),\n      status: \"Sent\"\n    }]);\n  };\n  const toggleTheme = () => {\n    setDarkMode(prevMode => !prevMode);\n    document.body.classList.toggle('dark-page', !darkMode);\n  };\n\n  // ✅ Now properly used inside the emoji picker button\n  const handleEmojiClick = emojiObject => {\n    setMessage(prev => prev + emojiObject.emoji);\n    setShowEmojiPicker(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-container ${darkMode ? 'dark-theme' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: activeUsers.length > 0 ? activeUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No active users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: recipient ? `Private Chat with ${recipient}` : \"Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"theme-toggle-btn\",\n          onClick: toggleTheme,\n          children: darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"voice-btn\",\n          onClick: toggleVoiceRecording,\n          children: isRecording ? \"🛑 Stop Recording\" : \"🎤 Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"media-btn\",\n          children: [\"\\uD83D\\uDCCE share media/files\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*, video/*\",\n            onChange: handleMediaUpload,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search messages...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: index === messages.length - 1 ? latestMessageRef : null,\n          className: `message ${msg.username === username ? \"sent\" : \"received\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-initials\",\n            children: msg.username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: msg.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 36\n              }, this), \": \", msg.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this), msg.media && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-preview\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: msg.media,\n                alt: \"Uploaded\",\n                style: {\n                  maxWidth: \"200px\",\n                  borderRadius: \"8px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [msg.timestamp, \" \\u2022 \", msg.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"emoji-btn\",\n          onClick: () => setShowEmojiPicker(prev => !prev),\n          children: \"\\uD83D\\uDE0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji-picker-container\",\n          children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n            onEmojiClick: handleEmojiClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          disabled: !isConnected,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"X2oP679DxxJWWwbsVdVKgzblKkY=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Stomp","EmojiPicker","jsxDEV","_jsxDEV","ChatRoom","username","recipient","_s","messages","setMessages","message","setMessage","activeUsers","setActiveUsers","searchQuery","setSearchQuery","darkMode","setDarkMode","showEmojiPicker","setShowEmojiPicker","isRecording","setIsRecording","userStatus","setUserStatus","stompClientRef","isConnected","setIsConnected","latestMessageRef","recognitionRef","updateUserStatus","clearTimeout","window","statusTimer","setTimeout","setOfflineStatus","connectWebSocket","socket","client","over","connect","console","log","topic","subscribe","msg","receivedMessage","JSON","parse","body","prev","timestamp","Date","toLocaleTimeString","status","current","intervalId","setInterval","fetch","then","res","json","data","catch","error","clearInterval","disconnect","scrollIntoView","behavior","toggleVoiceRecording","SpeechRecognition","webkitSpeechRecognition","alert","recognition","lang","continuous","interimResults","onstart","onresult","event","transcript","results","onerror","onend","start","_recognitionRef$curre","stop","sendMessage","connected","chatMessage","send","stringify","handleMediaUpload","file","target","files","fileURL","URL","createObjectURL","media","toggleTheme","prevMode","document","classList","toggle","handleEmojiClick","emojiObject","emoji","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","user","index","onClick","type","accept","onChange","hidden","placeholder","value","e","ref","charAt","toUpperCase","src","alt","style","maxWidth","borderRadius","onEmojiClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport './ChatRoom.css';\r\n\r\nconst ChatRoom = ({ username, recipient }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [userStatus, setUserStatus] = useState(\"🟢 Active now\");\r\n\r\n    const stompClientRef = useRef(null);\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const latestMessageRef = useRef(null);\r\n    const recognitionRef = useRef(null);\r\n    const updateUserStatus = () => {\r\n        setUserStatus(\"🟢 Active now\"); // Reset to active\r\n        clearTimeout(window.statusTimer);\r\n    \r\n        // Set \"Away\" after 60 seconds of inactivity\r\n        window.statusTimer = setTimeout(() => {\r\n            setUserStatus(\"🟡 Away\");\r\n        }, 60000);\r\n    };\r\n    \r\n    // Set \"Offline\" when user leaves\r\n    const setOfflineStatus = () => setUserStatus(\"🔴 Offline\");\r\n    \r\n    useEffect(() => {\r\n        const connectWebSocket = () => {\r\n            const socket = new SockJS(\"http://localhost:8080/chat\");\r\n            const client = Stomp.over(socket);\r\n\r\n            client.connect({}, () => {\r\n                console.log(\"Connected to WebSocket\");\r\n\r\n                const topic = recipient\r\n                    ? `/topic/private/${recipient}`\r\n                    : `/topic/messages`;\r\n\r\n                client.subscribe(topic, (msg) => {\r\n                    const receivedMessage = JSON.parse(msg.body);\r\n\r\n                    setMessages((prev) => [\r\n                        ...prev,\r\n                        {\r\n                            username: receivedMessage.username,\r\n                            message: receivedMessage.message,\r\n                            timestamp: receivedMessage.timestamp || new Date().toLocaleTimeString(),\r\n                            status: receivedMessage.status\r\n                        }\r\n                    ]);\r\n                });\r\n\r\n                stompClientRef.current = client;\r\n                setIsConnected(true);\r\n\r\n                const intervalId = setInterval(() => {\r\n                    fetch(\"http://localhost:8080/active-users\")\r\n                        .then((res) => res.json())\r\n                        .then((data) => setActiveUsers(data))\r\n                        .catch((error) => console.error(\"❌ Failed to fetch active users:\", error));\r\n                }, 5000);\r\n\r\n                return () => clearInterval(intervalId);\r\n            });\r\n        };\r\n\r\n        connectWebSocket();\r\n\r\n        return () => {\r\n            if (stompClientRef.current) {\r\n                stompClientRef.current.disconnect();\r\n                console.log(\"❌ Disconnected from WebSocket\");\r\n            }\r\n        };\r\n    }, [recipient]);\r\n\r\n    useEffect(() => {\r\n        if (latestMessageRef.current) {\r\n            latestMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, [messages]);\r\n\r\n    // 🎤 Speech Recognition Setup\r\n    const toggleVoiceRecording = () => {\r\n        if (!isRecording) {\r\n            if (!window.SpeechRecognition && !window.webkitSpeechRecognition) {\r\n                alert(\"Your browser does not support speech recognition.\");\r\n                return;\r\n            }\r\n\r\n            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n            const recognition = new SpeechRecognition();\r\n            recognition.lang = \"en-US\";\r\n            recognition.continuous = false;\r\n            recognition.interimResults = false;\r\n\r\n            recognition.onstart = () => setIsRecording(true);\r\n            recognition.onresult = (event) => {\r\n                const transcript = event.results[0][0].transcript;\r\n                setMessage(transcript);\r\n            };\r\n            recognition.onerror = (event) => console.error(\"Speech recognition error:\", event.error);\r\n            recognition.onend = () => setIsRecording(false);\r\n\r\n            recognition.start();\r\n            recognitionRef.current = recognition;\r\n        } else {\r\n            recognitionRef.current?.stop();\r\n            setIsRecording(false);\r\n        }\r\n    };\r\n\r\n    // ✅ Send message function is now used in the input field\r\n    const sendMessage = () => {\r\n        if (stompClientRef.current && stompClientRef.current.connected) {\r\n            const chatMessage = {\r\n                username: username || \"Anonymous\",\r\n                message: message || \"Empty message\",\r\n                recipient: recipient || \"\",\r\n                timestamp: new Date().toLocaleTimeString(),\r\n                status: \"Sent\"\r\n            };\r\n\r\n            stompClientRef.current.send(\r\n                \"/app/sendMessage\",\r\n                {},\r\n                JSON.stringify(chatMessage)\r\n            );\r\n\r\n            setMessage(\"\");\r\n        } else {\r\n            console.error(\"❌ WebSocket is not connected!\");\r\n            alert(\"Failed to send message. Connection not established.\");\r\n        }\r\n    };\r\n\r\n    const handleMediaUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) return;\r\n\r\n        const fileURL = URL.createObjectURL(file);\r\n\r\n        setMessages((prev) => [\r\n            ...prev,\r\n            {\r\n                username,\r\n                message: `📎 Sent an attachment`,\r\n                media: fileURL,\r\n                timestamp: new Date().toLocaleTimeString(),\r\n                status: \"Sent\"\r\n            }\r\n        ]);\r\n    };\r\n\r\n    const toggleTheme = () => {\r\n        setDarkMode((prevMode) => !prevMode);\r\n        document.body.classList.toggle('dark-page', !darkMode);\r\n    };\r\n\r\n    // ✅ Now properly used inside the emoji picker button\r\n    const handleEmojiClick = (emojiObject) => {\r\n        setMessage((prev) => prev + emojiObject.emoji);\r\n        setShowEmojiPicker(false);\r\n    };\r\n\r\n    return (\r\n        <div className={`chat-container ${darkMode ? 'dark-theme' : ''}`}>\r\n\r\n            <div className=\"sidebar\">\r\n                <h3>Active Users</h3>\r\n                <ul>\r\n                    {activeUsers.length > 0 ? (\r\n                        activeUsers.map((user, index) => (\r\n                            <li key={index}>{user}</li>\r\n                        ))\r\n                    ) : (\r\n                        <li>No active users</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"chat-box\">\r\n                <div className=\"chat-header\">\r\n                    <h2>{recipient ? `Private Chat with ${recipient}` : \"Group Chat\"}</h2>\r\n                </div>\r\n\r\n                {/* Dark Mode, Start Recording & Media Upload */}\r\n                <div className=\"top-controls\">\r\n                    <button className=\"theme-toggle-btn\" onClick={toggleTheme}>\r\n                        {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\r\n                    </button>\r\n\r\n                    <button className=\"voice-btn\" onClick={toggleVoiceRecording}>\r\n                        {isRecording ? \"🛑 Stop Recording\" : \"🎤 Start Recording\"}\r\n                    </button>\r\n\r\n                    {/* 📎 Upload Media Button */}\r\n                    <label className=\"media-btn\">\r\n                        📎 share media/files\r\n                        <input type=\"file\" accept=\"image/*, video/*\" onChange={handleMediaUpload} hidden />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"search-bar\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search messages...\"\r\n                        value={searchQuery}\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"messages\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} ref={index === messages.length - 1 ? latestMessageRef : null} className={`message ${msg.username === username ? \"sent\" : \"received\"}`}>\r\n                            <div className=\"profile-initials\">\r\n                                {msg.username.charAt(0).toUpperCase()}\r\n                            </div>\r\n\r\n                            <div className=\"message-bubble\">\r\n                                <p><strong>{msg.username}</strong>: {msg.message}</p>\r\n\r\n                                {msg.media && (\r\n                                    <div className=\"media-preview\">\r\n                                        <img src={msg.media} alt=\"Uploaded\" style={{ maxWidth: \"200px\", borderRadius: \"8px\" }} />\r\n                                    </div>\r\n                                )}\r\n\r\n                                <small>{msg.timestamp} • {msg.status}</small>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"input-container\">\r\n                    <button className=\"emoji-btn\" onClick={() => setShowEmojiPicker((prev) => !prev)}>\r\n                        😊\r\n                    </button>\r\n\r\n                    {showEmojiPicker && (\r\n                        <div className=\"emoji-picker-container\">\r\n                            <EmojiPicker onEmojiClick={handleEmojiClick} />\r\n                        </div>\r\n                    )}\r\n\r\n                    <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type a message...\" />\r\n\r\n                    <button onClick={sendMessage} disabled={!isConnected}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}