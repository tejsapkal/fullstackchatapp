{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\GroupChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Client } from '@stomp/stompjs';\nimport './GroupChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupChat = () => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [client, setClient] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const stompClient = new Client({\n      brokerURL: 'ws://localhost:8080/ws',\n      onConnect: () => {\n        console.log('Connected to WebSocket');\n        stompClient.subscribe('/topic/group', msg => {\n          const newMessage = JSON.parse(msg.body);\n          setMessages(prev => [...prev, newMessage]);\n        });\n\n        // Send join notification\n        stompClient.publish({\n          destination: '/app/join',\n          body: username\n        });\n      },\n      onDisconnect: () => console.log('Disconnected')\n    });\n    stompClient.activate();\n    setClient(stompClient);\n    return () => {\n      stompClient.deactivate();\n    };\n  }, [username]);\n  const sendMessage = () => {\n    if (client && message.trim() !== '') {\n      const msg = {\n        sender: username,\n        // âœ… Added sender field\n        content: message,\n        timestamp: new Date().toISOString()\n      };\n      client.publish({\n        destination: '/app/send',\n        body: JSON.stringify(msg)\n      });\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDD25 Group Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), \" \", msg.content, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: new Date(msg.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupChat, \"gXiDZHZ44RHOS3vK86VcNJNnZiA=\", false, function () {\n  return [useParams];\n});\n_c = GroupChat;\nexport default GroupChat;\nvar _c;\n$RefreshReg$(_c, \"GroupChat\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Client","jsxDEV","_jsxDEV","GroupChat","_s","username","client","setClient","messages","setMessages","message","setMessage","stompClient","brokerURL","onConnect","console","log","subscribe","msg","newMessage","JSON","parse","body","prev","publish","destination","onDisconnect","activate","deactivate","sendMessage","trim","sender","content","timestamp","Date","toISOString","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","toLocaleTimeString","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/GroupChat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Client } from '@stomp/stompjs';\r\nimport './GroupChat.css';\r\n\r\nconst GroupChat = () => {\r\n    const { username } = useParams();\r\n    const [client, setClient] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const stompClient = new Client({\r\n            brokerURL: 'ws://localhost:8080/ws',\r\n            onConnect: () => {\r\n                console.log('Connected to WebSocket');\r\n                stompClient.subscribe('/topic/group', (msg) => {\r\n                    const newMessage = JSON.parse(msg.body);\r\n                    setMessages((prev) => [...prev, newMessage]);\r\n                });\r\n\r\n                // Send join notification\r\n                stompClient.publish({\r\n                    destination: '/app/join',\r\n                    body: username,\r\n                });\r\n            },\r\n            onDisconnect: () => console.log('Disconnected'),\r\n        });\r\n\r\n        stompClient.activate();\r\n        setClient(stompClient);\r\n\r\n        return () => {\r\n            stompClient.deactivate();\r\n        };\r\n    }, [username]);\r\n\r\n    const sendMessage = () => {\r\n        if (client && message.trim() !== '') {\r\n            const msg = {\r\n                sender: username,          // âœ… Added sender field\r\n                content: message,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n\r\n            client.publish({\r\n                destination: '/app/send',\r\n                body: JSON.stringify(msg),\r\n            });\r\n\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <h1>ðŸ”¥ Group Chat</h1>\r\n            <div className=\"messages-container\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className=\"message\">\r\n                        <strong>{msg.sender}:</strong> {msg.content}\r\n                        <span className=\"timestamp\">{new Date(msg.timestamp).toLocaleTimeString()}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    placeholder=\"Type a message...\"\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GroupChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}