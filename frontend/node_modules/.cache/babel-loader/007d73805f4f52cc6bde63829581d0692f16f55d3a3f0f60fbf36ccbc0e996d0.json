{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\GroupChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Client } from '@stomp/stompjs';\nimport './GroupChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupChat = () => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [client, setClient] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const stompClient = new Client({\n      brokerURL: 'ws://localhost:8080/ws',\n      reconnectDelay: 5000,\n      onConnect: () => {\n        stompClient.subscribe('/topic/public', msg => {\n          const newMessage = JSON.parse(msg.body);\n          setMessages(prev => [...prev, newMessage]);\n        });\n        stompClient.publish({\n          destination: '/app/chat.register',\n          body: JSON.stringify({\n            username\n          })\n        });\n      }\n    });\n    stompClient.activate();\n    setClient(stompClient);\n    return () => {\n      stompClient.deactivate();\n    };\n  }, [username]);\n  const sendMessage = () => {\n    if (client && message.trim() !== '') {\n      client.publish({\n        destination: '/app/chat.send',\n        body: JSON.stringify({\n          username,\n          content: message\n        })\n      });\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      className: \"btn-back\",\n      children: \"\\u2B05\\uFE0F Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDD25 Group Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupChat, \"Ra48LCebt4OJPR/1iUpBQYOBHW8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GroupChat;\nexport default GroupChat;\nvar _c;\n$RefreshReg$(_c, \"GroupChat\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Client","jsxDEV","_jsxDEV","GroupChat","_s","username","client","setClient","messages","setMessages","message","setMessage","navigate","stompClient","brokerURL","reconnectDelay","onConnect","subscribe","msg","newMessage","JSON","parse","body","prev","publish","destination","stringify","activate","deactivate","sendMessage","trim","content","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/GroupChat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Client } from '@stomp/stompjs';\r\nimport './GroupChat.css';\r\n\r\nconst GroupChat = () => {\r\n    const { username } = useParams();\r\n    const [client, setClient] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const stompClient = new Client({\r\n            brokerURL: 'ws://localhost:8080/ws',\r\n            reconnectDelay: 5000,\r\n            onConnect: () => {\r\n                stompClient.subscribe('/topic/public', (msg) => {\r\n                    const newMessage = JSON.parse(msg.body);\r\n                    setMessages((prev) => [...prev, newMessage]);\r\n                });\r\n\r\n                stompClient.publish({\r\n                    destination: '/app/chat.register',\r\n                    body: JSON.stringify({ username })\r\n                });\r\n            }\r\n        });\r\n\r\n        stompClient.activate();\r\n        setClient(stompClient);\r\n\r\n        return () => {\r\n            stompClient.deactivate();\r\n        };\r\n    }, [username]);\r\n\r\n    const sendMessage = () => {\r\n        if (client && message.trim() !== '') {\r\n            client.publish({\r\n                destination: '/app/chat.send',\r\n                body: JSON.stringify({ username, content: message })\r\n            });\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <button onClick={() => navigate('/')} className=\"btn-back\">‚¨ÖÔ∏è Back</button>\r\n\r\n            <h1>üî• Group Chat</h1>\r\n\r\n            <div className=\"messages-container\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className=\"message\">\r\n                        <strong>{msg.username}:</strong> {msg.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    placeholder=\"Type a message...\"\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GroupChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}