{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nimport Message from \"./Message\";\nimport \"./ChatRoom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet stompClient = null;\nconst ChatRoom = ({\n  username\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  useEffect(() => {\n    stompClient = new Client({\n      brokerURL: \"ws://localhost:8080/chat\",\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000\n    });\n    stompClient.onConnect = () => {\n      console.log(\"Connected\");\n      stompClient.subscribe(\"/topic/messages\", message => {\n        const receivedMessage = JSON.parse(message.body);\n        setMessages(prevMessages => [...prevMessages, receivedMessage]);\n      });\n    };\n    stompClient.onStompError = error => {\n      console.error(\"Error:\", error);\n    };\n    stompClient.activate();\n    return () => {\n      if (stompClient) {\n        stompClient.deactivate();\n      }\n    };\n  }, []);\n  const sendMessage = () => {\n    if (stompClient && newMessage.trim()) {\n      const message = {\n        sender: username,\n        content: newMessage\n      };\n      stompClient.publish({\n        destination: \"/app/chat\",\n        body: JSON.stringify(message)\n      });\n      setNewMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        sender: msg.sender,\n        content: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n  a;\n};\n_s(ChatRoom, \"bFuYpZWMfOU2WhBa/CyaGkj6fmk=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","Client","Message","jsxDEV","_jsxDEV","stompClient","ChatRoom","username","_s","messages","setMessages","newMessage","setNewMessage","brokerURL","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","console","log","subscribe","message","receivedMessage","JSON","parse","body","prevMessages","onStompError","error","activate","deactivate","sendMessage","trim","sender","content","publish","destination","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","e","target","onClick","a","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport Message from \"./Message\";\r\nimport \"./ChatRoom.css\";\r\n\r\nlet stompClient = null;\r\n\r\nconst ChatRoom = ({ username }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        stompClient = new Client({\r\n            brokerURL: \"ws://localhost:8080/chat\",\r\n            reconnectDelay: 5000,\r\n            heartbeatIncoming: 4000,\r\n            heartbeatOutgoing: 4000\r\n        });\r\n\r\n        stompClient.onConnect = () => {\r\n            console.log(\"Connected\");\r\n            \r\n            stompClient.subscribe(\"/topic/messages\", (message) => {\r\n                const receivedMessage = JSON.parse(message.body);\r\n                setMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n            });\r\n        };\r\n\r\n        stompClient.onStompError = (error) => {\r\n            console.error(\"Error:\", error);\r\n        };\r\n\r\n        stompClient.activate();\r\n\r\n        return () => {\r\n            if (stompClient) {\r\n                stompClient.deactivate();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const sendMessage = () => {\r\n        if (stompClient && newMessage.trim()) {\r\n            const message = {\r\n                sender: username,\r\n                content: newMessage\r\n            };\r\n            stompClient.publish({\r\n                destination: \"/app/chat\",\r\n                body: JSON.stringify(message)\r\n            });\r\n            setNewMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-room\">\r\n            <h2>Welcome, {username}!</h2>\r\n            <div className=\"messages-container\">\r\n                {messages.map((msg, index) => (\r\n                    <Message key={index} sender={msg.sender} content={msg.content} />\r\n                ))}\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );a\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}