{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport EmojiPicker from 'emoji-picker-react';\nimport './ChatRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  username,\n  recipient\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const stompClientRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const latestMessageRef = useRef(null);\n  useEffect(() => {\n    const connectWebSocket = () => {\n      const socket = new SockJS(\"http://localhost:8080/chat\");\n      const client = Stomp.over(socket);\n      client.connect({}, () => {\n        console.log(\"Connected to WebSocket\");\n        const topic = recipient ? `/topic/private/${recipient}` : `/topic/messages`;\n        client.subscribe(topic, msg => {\n          const receivedMessage = JSON.parse(msg.body);\n          setMessages(prev => [...prev, {\n            username: receivedMessage.username,\n            message: receivedMessage.message,\n            audio: receivedMessage.audio,\n            // Audio message support\n            timestamp: receivedMessage.timestamp || new Date().toLocaleTimeString(),\n            status: receivedMessage.status\n          }]);\n        });\n        stompClientRef.current = client;\n        setIsConnected(true);\n        const intervalId = setInterval(() => {\n          fetch(\"http://localhost:8080/active-users\").then(res => res.json()).then(data => setActiveUsers(data)).catch(error => console.error(\"❌ Failed to fetch active users:\", error));\n        }, 5000);\n        return () => clearInterval(intervalId);\n      });\n    };\n    connectWebSocket();\n    return () => {\n      if (stompClientRef.current) {\n        stompClientRef.current.disconnect();\n        console.log(\"❌ Disconnected from WebSocket\");\n      }\n    };\n  }, [recipient]);\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [messages]);\n  const sendMessage = () => {\n    if (stompClientRef.current && stompClientRef.current.connected) {\n      const chatMessage = {\n        username: username || \"Anonymous\",\n        message: message || \"Empty message\",\n        recipient: recipient || \"\",\n        timestamp: new Date().toLocaleTimeString(),\n        status: \"Sent\"\n      };\n      stompClientRef.current.send(\"/app/sendMessage\", {}, JSON.stringify(chatMessage));\n      setMessage(\"\");\n    } else {\n      console.error(\"❌ WebSocket is not connected!\");\n      alert(\"Failed to send message. Connection not established.\");\n    }\n  };\n  const toggleTheme = () => {\n    setDarkMode(prevMode => !prevMode);\n    document.body.classList.toggle('dark-page', !darkMode);\n  };\n  const handleEmojiClick = emojiObject => {\n    setMessage(prev => prev + emojiObject.emoji);\n    setShowEmojiPicker(false);\n  };\n\n  // Voice Recording Functions\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const recorder = new MediaRecorder(stream);\n      let audioChunks = [];\n      recorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunks.push(event.data);\n        }\n      };\n      recorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: \"audio/webm\"\n        });\n        const reader = new FileReader();\n        reader.readAsDataURL(audioBlob);\n        reader.onloadend = () => {\n          sendVoiceMessage(reader.result);\n        };\n      };\n      recorder.start();\n      setMediaRecorder(recorder);\n      setIsRecording(true);\n    } catch (error) {\n      console.error(\"❌ Error starting recording:\", error);\n      alert(\"Microphone access denied!\");\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder) {\n      mediaRecorder.stop();\n      setIsRecording(false);\n    }\n  };\n  const sendVoiceMessage = audioData => {\n    if (stompClientRef.current && stompClientRef.current.connected) {\n      const voiceMessage = {\n        username: username || \"Anonymous\",\n        message: \"\",\n        // No text, only voice\n        recipient: recipient || \"\",\n        audio: audioData,\n        // Base64 audio\n        timestamp: new Date().toLocaleTimeString(),\n        status: \"Sent\"\n      };\n      stompClientRef.current.send(\"/app/sendMessage\", {}, JSON.stringify(voiceMessage));\n    } else {\n      console.error(\"❌ WebSocket is not connected!\");\n      alert(\"Failed to send voice message. Connection not established.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-container ${darkMode ? 'dark-theme' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: activeUsers.length > 0 ? activeUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No active users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: recipient ? `Private Chat with ${recipient}` : \"Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"theme-toggle-btn\",\n          onClick: toggleTheme,\n          children: darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search messages...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.length > 0 ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.username === username ? \"sent\" : \"received\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: msg.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 40\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 37\n            }, this), msg.audio ? /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: msg.audio,\n                type: \"audio/webm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 45\n              }, this), \"Your browser does not support the audio element.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [msg.timestamp, \" \\u2022 \", msg.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages found...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"emoji-btn\",\n          onClick: () => setShowEmojiPicker(prev => !prev),\n          children: \"\\uD83D\\uDE0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n          onEmojiClick: handleEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          disabled: !isConnected,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"voice-btn\",\n          onClick: isRecording ? stopRecording : startRecording,\n          children: isRecording ? \"⏹️ Stop\" : \"🎤 Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"ZfShfrsbDzWDcK2iA3AIbYvB2AQ=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Stomp","EmojiPicker","jsxDEV","_jsxDEV","ChatRoom","username","recipient","_s","messages","setMessages","message","setMessage","activeUsers","setActiveUsers","searchQuery","setSearchQuery","darkMode","setDarkMode","showEmojiPicker","setShowEmojiPicker","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","stompClientRef","isConnected","setIsConnected","latestMessageRef","connectWebSocket","socket","client","over","connect","console","log","topic","subscribe","msg","receivedMessage","JSON","parse","body","prev","audio","timestamp","Date","toLocaleTimeString","status","current","intervalId","setInterval","fetch","then","res","json","data","catch","error","clearInterval","disconnect","scrollIntoView","behavior","sendMessage","connected","chatMessage","send","stringify","alert","toggleTheme","prevMode","document","classList","toggle","handleEmojiClick","emojiObject","emoji","startRecording","stream","navigator","mediaDevices","getUserMedia","recorder","MediaRecorder","audioChunks","ondataavailable","event","size","push","onstop","audioBlob","Blob","type","reader","FileReader","readAsDataURL","onloadend","sendVoiceMessage","result","start","stopRecording","stop","audioData","voiceMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","user","index","onClick","placeholder","value","onChange","e","target","controls","src","onEmojiClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport './ChatRoom.css';\r\n\r\nconst ChatRoom = ({ username, recipient }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n\r\n    const stompClientRef = useRef(null);\r\n    const [isConnected, setIsConnected] = useState(false);\r\n\r\n    const latestMessageRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const connectWebSocket = () => {\r\n            const socket = new SockJS(\"http://localhost:8080/chat\");\r\n            const client = Stomp.over(socket);\r\n\r\n            client.connect({}, () => {\r\n                console.log(\"Connected to WebSocket\");\r\n\r\n                const topic = recipient\r\n                    ? `/topic/private/${recipient}`\r\n                    : `/topic/messages`;\r\n\r\n                client.subscribe(topic, (msg) => {\r\n                    const receivedMessage = JSON.parse(msg.body);\r\n\r\n                    setMessages((prev) => [\r\n                        ...prev,\r\n                        {\r\n                            username: receivedMessage.username,\r\n                            message: receivedMessage.message,\r\n                            audio: receivedMessage.audio, // Audio message support\r\n                            timestamp: receivedMessage.timestamp || new Date().toLocaleTimeString(),\r\n                            status: receivedMessage.status\r\n                        }\r\n                    ]);\r\n                });\r\n\r\n                stompClientRef.current = client;\r\n                setIsConnected(true);\r\n\r\n                const intervalId = setInterval(() => {\r\n                    fetch(\"http://localhost:8080/active-users\")\r\n                        .then((res) => res.json())\r\n                        .then((data) => setActiveUsers(data))\r\n                        .catch((error) => console.error(\"❌ Failed to fetch active users:\", error));\r\n                }, 5000);\r\n\r\n                return () => clearInterval(intervalId);\r\n            });\r\n        };\r\n\r\n        connectWebSocket();\r\n\r\n        return () => {\r\n            if (stompClientRef.current) {\r\n                stompClientRef.current.disconnect();\r\n                console.log(\"❌ Disconnected from WebSocket\");\r\n            }\r\n        };\r\n    }, [recipient]);\r\n\r\n    useEffect(() => {\r\n        if (latestMessageRef.current) {\r\n            latestMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, [messages]);\r\n\r\n    const sendMessage = () => {\r\n        if (stompClientRef.current && stompClientRef.current.connected) {\r\n            const chatMessage = {\r\n                username: username || \"Anonymous\",\r\n                message: message || \"Empty message\",\r\n                recipient: recipient || \"\",\r\n                timestamp: new Date().toLocaleTimeString(),\r\n                status: \"Sent\"\r\n            };\r\n\r\n            stompClientRef.current.send(\r\n                \"/app/sendMessage\",\r\n                {},\r\n                JSON.stringify(chatMessage)\r\n            );\r\n\r\n            setMessage(\"\");\r\n        } else {\r\n            console.error(\"❌ WebSocket is not connected!\");\r\n            alert(\"Failed to send message. Connection not established.\");\r\n        }\r\n    };\r\n\r\n    const toggleTheme = () => {\r\n        setDarkMode((prevMode) => !prevMode);\r\n        document.body.classList.toggle('dark-page', !darkMode);\r\n    };\r\n\r\n    const handleEmojiClick = (emojiObject) => {\r\n        setMessage((prev) => prev + emojiObject.emoji);\r\n        setShowEmojiPicker(false);\r\n    };\r\n\r\n    // Voice Recording Functions\r\n    const startRecording = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            const recorder = new MediaRecorder(stream);\r\n            let audioChunks = [];\r\n\r\n            recorder.ondataavailable = (event) => {\r\n                if (event.data.size > 0) {\r\n                    audioChunks.push(event.data);\r\n                }\r\n            };\r\n\r\n            recorder.onstop = async () => {\r\n                const audioBlob = new Blob(audioChunks, { type: \"audio/webm\" });\r\n                const reader = new FileReader();\r\n\r\n                reader.readAsDataURL(audioBlob);\r\n                reader.onloadend = () => {\r\n                    sendVoiceMessage(reader.result);\r\n                };\r\n            };\r\n\r\n            recorder.start();\r\n            setMediaRecorder(recorder);\r\n            setIsRecording(true);\r\n        } catch (error) {\r\n            console.error(\"❌ Error starting recording:\", error);\r\n            alert(\"Microphone access denied!\");\r\n        }\r\n    };\r\n\r\n    const stopRecording = () => {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.stop();\r\n            setIsRecording(false);\r\n        }\r\n    };\r\n\r\n    const sendVoiceMessage = (audioData) => {\r\n        if (stompClientRef.current && stompClientRef.current.connected) {\r\n            const voiceMessage = {\r\n                username: username || \"Anonymous\",\r\n                message: \"\", // No text, only voice\r\n                recipient: recipient || \"\",\r\n                audio: audioData, // Base64 audio\r\n                timestamp: new Date().toLocaleTimeString(),\r\n                status: \"Sent\"\r\n            };\r\n\r\n            stompClientRef.current.send(\r\n                \"/app/sendMessage\",\r\n                {},\r\n                JSON.stringify(voiceMessage)\r\n            );\r\n        } else {\r\n            console.error(\"❌ WebSocket is not connected!\");\r\n            alert(\"Failed to send voice message. Connection not established.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`chat-container ${darkMode ? 'dark-theme' : ''}`}>\r\n\r\n            <div className=\"sidebar\">\r\n                <h3>Active Users</h3>\r\n                <ul>\r\n                    {activeUsers.length > 0 ? (\r\n                        activeUsers.map((user, index) => (\r\n                            <li key={index}>{user}</li>\r\n                        ))\r\n                    ) : (\r\n                        <li>No active users</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"chat-box\">\r\n                <div className=\"chat-header\">\r\n                    <h2>{recipient ? `Private Chat with ${recipient}` : \"Group Chat\"}</h2>\r\n\r\n                    {/* Dark mode toggle button */}\r\n                    <button className=\"theme-toggle-btn\" onClick={toggleTheme}>\r\n                        {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"search-bar\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search messages...\"\r\n                        value={searchQuery}\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"messages\">\r\n                    {messages.length > 0 ? (\r\n                        messages.map((msg, index) => (\r\n                            <div key={index} className={`message ${msg.username === username ? \"sent\" : \"received\"}`}>\r\n                                <div className=\"message-bubble\">\r\n                                    <p><strong>{msg.username}</strong>:</p>\r\n                                    {msg.audio ? (\r\n                                        <audio controls>\r\n                                            <source src={msg.audio} type=\"audio/webm\" />\r\n                                            Your browser does not support the audio element.\r\n                                        </audio>\r\n                                    ) : (\r\n                                        <p>{msg.message}</p>\r\n                                    )}\r\n                                    <small>{msg.timestamp} • {msg.status}</small>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>No messages found...</p>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"input-container\">\r\n                    <button className=\"emoji-btn\" onClick={() => setShowEmojiPicker((prev) => !prev)}>😊</button>\r\n                    {showEmojiPicker && <EmojiPicker onEmojiClick={handleEmojiClick} />}\r\n\r\n                    <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type a message...\" />\r\n                    <button onClick={sendMessage} disabled={!isConnected}>Send</button>\r\n\r\n                    {/* Voice Recording Button */}\r\n                    <button className=\"voice-btn\" onClick={isRecording ? stopRecording : startRecording}>\r\n                        {isRecording ? \"⏹️ Stop\" : \"🎤 Record\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}