{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\GroupChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Client } from '@stomp/stompjs';\nimport './GroupChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupChat = () => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [client, setClient] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // âœ… Fetch Previous Group Messages from the Database\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/api/chat/group');\n        const data = await response.json();\n        setMessages(data);\n      } catch (error) {\n        console.error('Error fetching group messages:', error);\n      }\n    };\n    fetchMessages();\n\n    // âœ… WebSocket Connection\n    const newClient = new Client({\n      brokerURL: 'ws://localhost:8080/ws',\n      onConnect: () => {\n        console.log('Connected to WebSocket');\n        newClient.subscribe('/topic/public', message => {\n          const newMessage = JSON.parse(message.body);\n          setMessages(prev => [...prev, newMessage]);\n        });\n      },\n      onDisconnect: () => console.log('Disconnected from WebSocket')\n    });\n    newClient.activate();\n    setClient(newClient);\n    return () => {\n      newClient.deactivate();\n    };\n  }, []);\n\n  // âœ… Send Group Message\n  const sendMessage = () => {\n    if (client && message.trim()) {\n      const msg = {\n        sender: username,\n        content: message\n      };\n      client.publish({\n        destination: '/app/chat.send',\n        body: JSON.stringify(msg)\n      });\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD25 Group Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === username ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupChat, \"gXiDZHZ44RHOS3vK86VcNJNnZiA=\", false, function () {\n  return [useParams];\n});\n_c = GroupChat;\nexport default GroupChat;\nvar _c;\n$RefreshReg$(_c, \"GroupChat\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Client","jsxDEV","_jsxDEV","GroupChat","_s","username","client","setClient","messages","setMessages","message","setMessage","fetchMessages","response","fetch","data","json","error","console","newClient","brokerURL","onConnect","log","subscribe","newMessage","JSON","parse","body","prev","onDisconnect","activate","deactivate","sendMessage","trim","msg","sender","content","publish","destination","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/GroupChat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Client } from '@stomp/stompjs';\r\nimport './GroupChat.css';\r\n\r\nconst GroupChat = () => {\r\n    const { username } = useParams();\r\n    const [client, setClient] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // âœ… Fetch Previous Group Messages from the Database\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:8080/api/chat/group');\r\n                const data = await response.json();\r\n                setMessages(data);\r\n            } catch (error) {\r\n                console.error('Error fetching group messages:', error);\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n\r\n        // âœ… WebSocket Connection\r\n        const newClient = new Client({\r\n            brokerURL: 'ws://localhost:8080/ws',\r\n            onConnect: () => {\r\n                console.log('Connected to WebSocket');\r\n                \r\n                newClient.subscribe('/topic/public', (message) => {\r\n                    const newMessage = JSON.parse(message.body);\r\n                    setMessages((prev) => [...prev, newMessage]);\r\n                });\r\n            },\r\n            onDisconnect: () => console.log('Disconnected from WebSocket'),\r\n        });\r\n\r\n        newClient.activate();\r\n        setClient(newClient);\r\n\r\n        return () => {\r\n            newClient.deactivate();\r\n        };\r\n    }, []);\r\n\r\n    // âœ… Send Group Message\r\n    const sendMessage = () => {\r\n        if (client && message.trim()) {\r\n            const msg = {\r\n                sender: username,\r\n                content: message\r\n            };\r\n\r\n            client.publish({\r\n                destination: '/app/chat.send',\r\n                body: JSON.stringify(msg)\r\n            });\r\n\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"group-chat-container\">\r\n            <h2>ðŸ”¥ Group Chat</h2>\r\n            <div className=\"chat-box\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className={`message ${msg.sender === username ? 'sent' : 'received'}`}>\r\n                        <strong>{msg.sender}:</strong> {msg.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GroupChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}