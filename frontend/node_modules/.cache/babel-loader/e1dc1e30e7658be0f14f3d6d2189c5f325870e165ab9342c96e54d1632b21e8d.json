{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\PrivateChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nimport SockJS from \"sockjs-client\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateChat = ({\n  username\n}) => {\n  _s();\n  const {\n    recipient\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [client, setClient] = useState(null); // Store the client instance\n  const [isConnected, setIsConnected] = useState(false); // Track connection status\n\n  useEffect(() => {\n    const stompClient = new Client({\n      webSocketFactory: () => new SockJS(\"http://localhost:8080/chat\"),\n      onConnect: () => {\n        console.log(\"Connected to Private Chat\");\n        setIsConnected(true); // Set connection status to true\n\n        // Subscribe to private messages\n        stompClient.subscribe(`/user/${username}/queue/messages`, message => {\n          const msg = JSON.parse(message.body);\n          setMessages(prev => [...prev, msg]);\n        });\n      },\n      onDisconnect: () => {\n        console.log(\"Disconnected\");\n        setIsConnected(false); // Set connection status to false\n      }\n    });\n    stompClient.activate();\n    setClient(stompClient);\n    return () => stompClient.deactivate();\n  }, [username]);\n  const sendMessage = () => {\n    if (isConnected && client) {\n      client.publish({\n        destination: \"/app/private\",\n        body: JSON.stringify({\n          sender: username,\n          recipient,\n          content: input\n        })\n      });\n      setInput(\"\");\n    } else {\n      console.error(\"STOMP connection not established yet.\");\n      alert(\"WebSocket connection not established. Please wait.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Private Chat with \", recipient]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(PrivateChat, \"AFmow/rqnlG5VC46gWk/MnvYKOA=\", false, function () {\n  return [useParams];\n});\n_c = PrivateChat;\nexport default PrivateChat;\nvar _c;\n$RefreshReg$(_c, \"PrivateChat\");","map":{"version":3,"names":["React","useEffect","useState","Client","SockJS","useParams","jsxDEV","_jsxDEV","PrivateChat","username","_s","recipient","messages","setMessages","input","setInput","client","setClient","isConnected","setIsConnected","stompClient","webSocketFactory","onConnect","console","log","subscribe","message","msg","JSON","parse","body","prev","onDisconnect","activate","deactivate","sendMessage","publish","destination","stringify","sender","content","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/PrivateChat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst PrivateChat = ({ username }) => {\r\n  const { recipient } = useParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [client, setClient] = useState(null);  // Store the client instance\r\n  const [isConnected, setIsConnected] = useState(false);  // Track connection status\r\n\r\n  useEffect(() => {\r\n    const stompClient = new Client({\r\n      webSocketFactory: () => new SockJS(\"http://localhost:8080/chat\"),\r\n      onConnect: () => {\r\n        console.log(\"Connected to Private Chat\");\r\n        setIsConnected(true);  // Set connection status to true\r\n\r\n        // Subscribe to private messages\r\n        stompClient.subscribe(`/user/${username}/queue/messages`, (message) => {\r\n          const msg = JSON.parse(message.body);\r\n          setMessages((prev) => [...prev, msg]);\r\n        });\r\n      },\r\n      onDisconnect: () => {\r\n        console.log(\"Disconnected\");\r\n        setIsConnected(false);  // Set connection status to false\r\n      },\r\n    });\r\n\r\n    stompClient.activate();\r\n    setClient(stompClient);\r\n\r\n    return () => stompClient.deactivate();\r\n  }, [username]);\r\n\r\n  const sendMessage = () => {\r\n    if (isConnected && client) {\r\n      client.publish({\r\n        destination: \"/app/private\",\r\n        body: JSON.stringify({\r\n          sender: username,\r\n          recipient,\r\n          content: input,\r\n        }),\r\n      });\r\n      setInput(\"\");\r\n    } else {\r\n      console.error(\"STOMP connection not established yet.\");\r\n      alert(\"WebSocket connection not established. Please wait.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Private Chat with {recipient}</h2>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <div key={index}>\r\n            <strong>{msg.sender}:</strong> {msg.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        placeholder=\"Type a message...\"\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}