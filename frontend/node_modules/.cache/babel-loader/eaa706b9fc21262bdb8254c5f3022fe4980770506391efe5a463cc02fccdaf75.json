{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const [stompClient, setStompClient] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [chatMessages, setChatMessages] = useState([]);\n  useEffect(() => {\n    const client = new Client({\n      brokerURL: \"ws://localhost:8080/ws\",\n      // Direct WebSocket URL\n      reconnectDelay: 5000,\n      // Auto-reconnect every 5 seconds\n      onConnect: () => {\n        console.log(\"Connected to WebSocket!\");\n\n        // Subscribe all users to the same public topic\n        client.subscribe(\"/topic/public\", msg => {\n          const receivedMessage = JSON.parse(msg.body);\n          setChatMessages(prevMessages => [...prevMessages, receivedMessage]);\n        });\n        setStompClient(client);\n      },\n      onStompError: error => {\n        console.error(\"STOMP error:\", error);\n      }\n    });\n    client.activate();\n    return () => {\n      if (client) {\n        client.deactivate();\n      }\n    };\n  }, []);\n  const sendMessage = () => {\n    if (stompClient && message.trim()) {\n      const chatMessage = {\n        sender: \"User\",\n        // Replace with dynamic username later\n        content: message,\n        timestamp: new Date().toISOString()\n      };\n      stompClient.publish({\n        destination: \"/app/chat.sendMessage\",\n        body: JSON.stringify(chatMessage)\n      });\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"Kw7IMQOn2+NGmpZWbkZf/FWLc9s=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","Client","jsxDEV","_jsxDEV","ChatRoom","_s","stompClient","setStompClient","message","setMessage","chatMessages","setChatMessages","client","brokerURL","reconnectDelay","onConnect","console","log","subscribe","msg","receivedMessage","JSON","parse","body","prevMessages","onStompError","error","activate","deactivate","sendMessage","trim","chatMessage","sender","content","timestamp","Date","toISOString","publish","destination","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nconst ChatRoom = () => {\r\n  const [stompClient, setStompClient] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const client = new Client({\r\n      brokerURL: \"ws://localhost:8080/ws\",  // Direct WebSocket URL\r\n      reconnectDelay: 5000,                 // Auto-reconnect every 5 seconds\r\n      onConnect: () => {\r\n        console.log(\"Connected to WebSocket!\");\r\n\r\n        // Subscribe all users to the same public topic\r\n        client.subscribe(\"/topic/public\", (msg) => {\r\n          const receivedMessage = JSON.parse(msg.body);\r\n          setChatMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n        });\r\n\r\n        setStompClient(client);\r\n      },\r\n      onStompError: (error) => {\r\n        console.error(\"STOMP error:\", error);\r\n      },\r\n    });\r\n\r\n    client.activate();\r\n\r\n    return () => {\r\n      if (client) {\r\n        client.deactivate();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    if (stompClient && message.trim()) {\r\n      const chatMessage = {\r\n        sender: \"User\",  // Replace with dynamic username later\r\n        content: message,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      stompClient.publish({\r\n        destination: \"/app/chat.sendMessage\",\r\n        body: JSON.stringify(chatMessage),\r\n      });\r\n\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chat Room</h2>\r\n      <div>\r\n        {chatMessages.map((msg, index) => (\r\n          <div key={index}>\r\n            <strong>{msg.sender}: </strong> {msg.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        placeholder=\"Type a message...\"\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}