{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\PrivateChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Client } from '@stomp/stompjs';\nimport './PrivateChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateChat = () => {\n  _s();\n  const {\n    sender,\n    recipient\n  } = useParams();\n  const [client, setClient] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // ✅ Fetch Previous Private Messages\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/api/chat/private/${sender}/${recipient}`);\n        const data = await response.json();\n        setMessages(data);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n\n    // ✅ WebSocket Connection\n    const newClient = new Client({\n      brokerURL: 'ws://localhost:8080/ws',\n      onConnect: () => {\n        newClient.subscribe(`/user/${recipient}/queue/messages`, message => {\n          const newMessage = JSON.parse(message.body);\n          setMessages(prev => [...prev, newMessage]);\n        });\n      }\n    });\n    newClient.activate();\n    setClient(newClient);\n    return () => {\n      newClient.deactivate();\n    };\n  }, [sender, recipient]);\n\n  // ✅ Send Private Message\n  const sendMessage = () => {\n    if (client && message.trim()) {\n      const msg = {\n        sender,\n        recipient,\n        content: message\n      };\n      client.publish({\n        destination: '/app/private.send',\n        body: JSON.stringify(msg)\n      });\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Private Chat: \", recipient]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === sender ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(PrivateChat, \"1xcIS6e0m+7TPArUhJM0DK68+yA=\", false, function () {\n  return [useParams];\n});\n_c = PrivateChat;\nexport default PrivateChat;\nvar _c;\n$RefreshReg$(_c, \"PrivateChat\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Client","jsxDEV","_jsxDEV","PrivateChat","_s","sender","recipient","client","setClient","messages","setMessages","message","setMessage","fetchMessages","response","fetch","data","json","error","console","newClient","brokerURL","onConnect","subscribe","newMessage","JSON","parse","body","prev","activate","deactivate","sendMessage","trim","msg","content","publish","destination","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/PrivateChat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Client } from '@stomp/stompjs';\r\nimport './PrivateChat.css';\r\n\r\nconst PrivateChat = () => {\r\n    const { sender, recipient } = useParams();\r\n    const [client, setClient] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    \r\n    useEffect(() => {\r\n        // ✅ Fetch Previous Private Messages\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:8080/api/chat/private/${sender}/${recipient}`);\r\n                const data = await response.json();\r\n                setMessages(data);\r\n            } catch (error) {\r\n                console.error('Error fetching messages:', error);\r\n            }\r\n        };\r\n        fetchMessages();\r\n\r\n        // ✅ WebSocket Connection\r\n        const newClient = new Client({\r\n            brokerURL: 'ws://localhost:8080/ws',\r\n            onConnect: () => {\r\n                newClient.subscribe(`/user/${recipient}/queue/messages`, (message) => {\r\n                    const newMessage = JSON.parse(message.body);\r\n                    setMessages((prev) => [...prev, newMessage]);\r\n                });\r\n            }\r\n        });\r\n\r\n        newClient.activate();\r\n        setClient(newClient);\r\n\r\n        return () => {\r\n            newClient.deactivate();\r\n        };\r\n    }, [sender, recipient]);\r\n\r\n    // ✅ Send Private Message\r\n    const sendMessage = () => {\r\n        if (client && message.trim()) {\r\n            const msg = {\r\n                sender,\r\n                recipient,\r\n                content: message\r\n            };\r\n            client.publish({\r\n                destination: '/app/private.send',\r\n                body: JSON.stringify(msg)\r\n            });\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <h2>Private Chat: {recipient}</h2>\r\n            <div className=\"chat-box\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className={`message ${msg.sender === sender ? 'sent' : 'received'}`}>\r\n                        <strong>{msg.sender}:</strong> {msg.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrivateChat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGP,SAAS,CAAC,CAAC;EACzC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0CV,MAAM,IAAIC,SAAS,EAAE,CAAC;QAC7F,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,WAAW,CAACM,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IACDL,aAAa,CAAC,CAAC;;IAEf;IACA,MAAMO,SAAS,GAAG,IAAIpB,MAAM,CAAC;MACzBqB,SAAS,EAAE,wBAAwB;MACnCC,SAAS,EAAEA,CAAA,KAAM;QACbF,SAAS,CAACG,SAAS,CAAC,SAASjB,SAAS,iBAAiB,EAAGK,OAAO,IAAK;UAClE,MAAMa,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACf,OAAO,CAACgB,IAAI,CAAC;UAC3CjB,WAAW,CAAEkB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEJ,UAAU,CAAC,CAAC;QAChD,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IAEFJ,SAAS,CAACS,QAAQ,CAAC,CAAC;IACpBrB,SAAS,CAACY,SAAS,CAAC;IAEpB,OAAO,MAAM;MACTA,SAAS,CAACU,UAAU,CAAC,CAAC;IAC1B,CAAC;EACL,CAAC,EAAE,CAACzB,MAAM,EAAEC,SAAS,CAAC,CAAC;;EAEvB;EACA,MAAMyB,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIxB,MAAM,IAAII,OAAO,CAACqB,IAAI,CAAC,CAAC,EAAE;MAC1B,MAAMC,GAAG,GAAG;QACR5B,MAAM;QACNC,SAAS;QACT4B,OAAO,EAAEvB;MACb,CAAC;MACDJ,MAAM,CAAC4B,OAAO,CAAC;QACXC,WAAW,EAAE,mBAAmB;QAChCT,IAAI,EAAEF,IAAI,CAACY,SAAS,CAACJ,GAAG;MAC5B,CAAC,CAAC;MACFrB,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EAED,oBACIV,OAAA;IAAKoC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BrC,OAAA;MAAAqC,QAAA,GAAI,gBAAc,EAACjC,SAAS;IAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClCzC,OAAA;MAAKoC,SAAS,EAAC,UAAU;MAAAC,QAAA,EACpB9B,QAAQ,CAACmC,GAAG,CAAC,CAACX,GAAG,EAAEY,KAAK,kBACrB3C,OAAA;QAAiBoC,SAAS,EAAE,WAAWL,GAAG,CAAC5B,MAAM,KAAKA,MAAM,GAAG,MAAM,GAAG,UAAU,EAAG;QAAAkC,QAAA,gBACjFrC,OAAA;UAAAqC,QAAA,GAASN,GAAG,CAAC5B,MAAM,EAAC,GAAC;QAAA;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACV,GAAG,CAACC,OAAO;MAAA,GADrCW,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNzC,OAAA;MAAKoC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBrC,OAAA;QACI4C,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAErC,OAAQ;QACfsC,QAAQ,EAAGC,CAAC,IAAKtC,UAAU,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFzC,OAAA;QAAQkD,OAAO,EAAErB,WAAY;QAAAQ,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvC,EAAA,CA3EID,WAAW;EAAA,QACiBJ,SAAS;AAAA;AAAAsD,EAAA,GADrClD,WAAW;AA6EjB,eAAeA,WAAW;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}