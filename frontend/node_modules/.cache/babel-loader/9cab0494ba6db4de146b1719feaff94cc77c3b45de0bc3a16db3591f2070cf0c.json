{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const [client, setClient] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [chatMessages, setChatMessages] = useState([]);\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    const stompClient = new Client({\n      brokerURL: \"ws://localhost:8080/ws\",\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n      onConnect: () => {\n        console.log(\"Connected ✅\");\n        setConnected(true);\n        stompClient.subscribe(\"/topic/public\", msg => {\n          if (msg.body) {\n            const receivedMessage = JSON.parse(msg.body);\n\n            // ✅ Display message correctly\n            setChatMessages(prevMessages => [...prevMessages, receivedMessage]);\n          }\n        });\n      },\n      onDisconnect: () => {\n        console.log(\"Disconnected ❌\");\n        setConnected(false);\n      },\n      onStompError: frame => {\n        console.error(\"Broker reported error: \" + frame.headers[\"message\"]);\n        console.error(\"Additional details: \" + frame.body);\n      }\n    });\n    stompClient.activate();\n    setClient(stompClient);\n    return () => {\n      if (stompClient) {\n        stompClient.deactivate();\n      }\n    };\n  }, []);\n  const sendMessage = () => {\n    if (client && message.trim() !== \"\") {\n      const chatMessage = {\n        sender: \"User\",\n        // ✅ Replace with dynamic username later\n        content: message,\n        timestamp: new Date().toISOString()\n      };\n      client.publish({\n        destination: \"/app/chat.sendMessage\",\n        body: JSON.stringify(chatMessage)\n      });\n\n      // ✅ Display sent message in the chat window\n      setChatMessages(prev => [...prev, chatMessage]);\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat Room \", connected ? \"🟢\" : \"🔴\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"400px\",\n        overflowY: \"auto\",\n        border: \"1px solid #ccc\",\n        padding: \"10px\"\n      },\n      children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), \" \", msg.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: new Date(msg.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"vMCa0cNY8vcaUwN2YzFgXuJjGlE=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","Client","jsxDEV","_jsxDEV","ChatRoom","_s","client","setClient","message","setMessage","chatMessages","setChatMessages","connected","setConnected","stompClient","brokerURL","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","console","log","subscribe","msg","body","receivedMessage","JSON","parse","prevMessages","onDisconnect","onStompError","frame","error","headers","activate","deactivate","sendMessage","trim","chatMessage","sender","content","timestamp","Date","toISOString","publish","destination","stringify","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","overflowY","border","padding","map","index","toLocaleTimeString","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nconst ChatRoom = () => {\r\n  const [client, setClient] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const stompClient = new Client({\r\n      brokerURL: \"ws://localhost:8080/ws\",\r\n      reconnectDelay: 5000,\r\n      heartbeatIncoming: 4000,\r\n      heartbeatOutgoing: 4000,\r\n      onConnect: () => {\r\n        console.log(\"Connected ✅\");\r\n        setConnected(true);\r\n\r\n        stompClient.subscribe(\"/topic/public\", (msg) => {\r\n          if (msg.body) {\r\n            const receivedMessage = JSON.parse(msg.body);\r\n            \r\n            // ✅ Display message correctly\r\n            setChatMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n          }\r\n        });\r\n      },\r\n      onDisconnect: () => {\r\n        console.log(\"Disconnected ❌\");\r\n        setConnected(false);\r\n      },\r\n      onStompError: (frame) => {\r\n        console.error(\"Broker reported error: \" + frame.headers[\"message\"]);\r\n        console.error(\"Additional details: \" + frame.body);\r\n      },\r\n    });\r\n\r\n    stompClient.activate();\r\n    setClient(stompClient);\r\n\r\n    return () => {\r\n      if (stompClient) {\r\n        stompClient.deactivate();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    if (client && message.trim() !== \"\") {\r\n      const chatMessage = {\r\n        sender: \"User\",  // ✅ Replace with dynamic username later\r\n        content: message,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n\r\n      client.publish({\r\n        destination: \"/app/chat.sendMessage\",\r\n        body: JSON.stringify(chatMessage),\r\n      });\r\n\r\n      // ✅ Display sent message in the chat window\r\n      setChatMessages((prev) => [...prev, chatMessage]);\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chat Room {connected ? \"🟢\" : \"🔴\"}</h2>\r\n      <div style={{ height: \"400px\", overflowY: \"auto\", border: \"1px solid #ccc\", padding: \"10px\" }}>\r\n        {chatMessages.map((msg, index) => (\r\n          <div key={index}>\r\n            <strong>{msg.sender}: </strong> {msg.content}\r\n            <br />\r\n            <small>{new Date(msg.timestamp).toLocaleTimeString()}</small>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        placeholder=\"Type a message...\"\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}