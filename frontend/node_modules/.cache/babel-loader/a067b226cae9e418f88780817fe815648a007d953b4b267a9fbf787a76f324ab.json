{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef(null); // Use useRef for stable socket connection\n\n  useEffect(() => {\n    socketRef.current = io('http://localhost:8080', {\n      withCredentials: true\n    });\n    socketRef.current.on('message', msg => {\n      setMessages(prev => [...prev, msg]);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []); // ✅ Empty dependency array\n\n  const sendMessage = () => {\n    if (message.trim()) {\n      socketRef.current.emit('sendMessage', message);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"ieFjtk11DEgmgxjPMitewM05vyE=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","ChatRoom","_s","message","setMessage","messages","setMessages","socketRef","current","withCredentials","on","msg","prev","disconnect","sendMessage","trim","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst ChatRoom = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const socketRef = useRef(null);  // Use useRef for stable socket connection\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io('http://localhost:8080', {\r\n      withCredentials: true\r\n    });\r\n\r\n    socketRef.current.on('message', (msg) => {\r\n      setMessages((prev) => [...prev, msg]);\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, []);  // ✅ Empty dependency array\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim()) {\r\n      socketRef.current.emit('sendMessage', message);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chat Room</h1>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <div key={index}>{msg}</div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC,CAAC,CAAE;;EAEjCD,SAAS,CAAC,MAAM;IACdW,SAAS,CAACC,OAAO,GAAGV,EAAE,CAAC,uBAAuB,EAAE;MAC9CW,eAAe,EAAE;IACnB,CAAC,CAAC;IAEFF,SAAS,CAACC,OAAO,CAACE,EAAE,CAAC,SAAS,EAAGC,GAAG,IAAK;MACvCL,WAAW,CAAEM,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,GAAG,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,OAAO,MAAM;MACXJ,SAAS,CAACC,OAAO,CAACK,UAAU,CAAC,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIX,OAAO,CAACY,IAAI,CAAC,CAAC,EAAE;MAClBR,SAAS,CAACC,OAAO,CAACQ,IAAI,CAAC,aAAa,EAAEb,OAAO,CAAC;MAC9CC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBrB,OAAA;MAAAiB,QAAA,EACGZ,QAAQ,CAACiB,GAAG,CAAC,CAACX,GAAG,EAAEY,KAAK,kBACvBvB,OAAA;QAAAiB,QAAA,EAAkBN;MAAG,GAAXY,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEtB,OAAQ;MACfuB,QAAQ,EAAGC,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFrB,OAAA;MAAQ6B,OAAO,EAAEf,WAAY;MAAAG,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1CID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}