{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const [stompClient, setStompClient] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\"); // âœ… WebSocket endpoint\n    const client = Stomp.over(socket);\n    client.connect({}, () => {\n      console.log(\"Connected to WebSocket\");\n      setConnected(true); // Green dot ðŸŸ¢\n\n      client.subscribe(\"/topic/messages\", msg => {\n        const receivedMessage = JSON.parse(msg.body);\n        setMessages(prev => [...prev, receivedMessage]);\n      });\n      setStompClient(client);\n    }, error => {\n      console.error(\"WebSocket connection failed:\", error);\n      setConnected(false); // Red dot ðŸ”´\n    });\n    return () => {\n      if (stompClient) {\n        stompClient.disconnect();\n      }\n    };\n  }, []);\n  const sendMessage = () => {\n    if (stompClient && connected) {\n      const chatMessage = {\n        content: message,\n        sender: \"User\",\n        timestamp: new Date().toISOString()\n      };\n      stompClient.send(\"/app/chat\", {}, JSON.stringify(chatMessage));\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat Room \", connected ? \"ðŸŸ¢\" : \"ðŸ”´\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      disabled: !connected,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"1QQs1t3j0DrJQsfKDRxw7bnsEvI=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","SockJS","Stomp","jsxDEV","_jsxDEV","ChatRoom","_s","stompClient","setStompClient","connected","setConnected","message","setMessage","messages","setMessages","socket","client","over","connect","console","log","subscribe","msg","receivedMessage","JSON","parse","body","prev","error","disconnect","sendMessage","chatMessage","content","sender","timestamp","Date","toISOString","send","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport Stomp from \"stompjs\";\r\n\r\nconst ChatRoom = () => {\r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [connected, setConnected] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const socket = new SockJS(\"http://localhost:8080/ws\");  // âœ… WebSocket endpoint\r\n        const client = Stomp.over(socket);\r\n\r\n        client.connect({}, () => {\r\n            console.log(\"Connected to WebSocket\");\r\n            setConnected(true);  // Green dot ðŸŸ¢\r\n\r\n            client.subscribe(\"/topic/messages\", (msg) => {\r\n                const receivedMessage = JSON.parse(msg.body);\r\n                setMessages((prev) => [...prev, receivedMessage]);\r\n            });\r\n\r\n            setStompClient(client);\r\n        }, (error) => {\r\n            console.error(\"WebSocket connection failed:\", error);\r\n            setConnected(false);  // Red dot ðŸ”´\r\n        });\r\n\r\n        return () => {\r\n            if (stompClient) {\r\n                stompClient.disconnect();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const sendMessage = () => {\r\n        if (stompClient && connected) {\r\n            const chatMessage = {\r\n                content: message,\r\n                sender: \"User\",\r\n                timestamp: new Date().toISOString(),\r\n            };\r\n            stompClient.send(\"/app/chat\", {}, JSON.stringify(chatMessage));\r\n            setMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Chat Room {connected ? \"ðŸŸ¢\" : \"ðŸ”´\"}</h2>\r\n            <div>\r\n                {messages.map((msg, index) => (\r\n                    <div key={index}>\r\n                        <strong>{msg.sender}:</strong> {msg.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder=\"Type a message...\"\r\n            />\r\n            <button onClick={sendMessage} disabled={!connected}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}