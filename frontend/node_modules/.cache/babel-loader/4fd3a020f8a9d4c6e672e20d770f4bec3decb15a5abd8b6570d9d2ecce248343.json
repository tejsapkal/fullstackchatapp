{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport './ChatRoom.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  username,\n  recipient\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredMessages, setFilteredMessages] = useState([]);\n  const [editMessageId, setEditMessageId] = useState(null);\n  const [editedText, setEditedText] = useState(\"\");\n  const searchMessages = async () => {\n    const response = await fetch(`http://localhost:8080/search?query=${searchQuery}`);\n    const data = await response.json();\n    setFilteredMessages(data);\n  };\n  const editMessage = async (id, newText) => {\n    await fetch(`http://localhost:8080/edit/${id}?newMessage=${newText}`, {\n      method: 'PUT'\n    });\n    setEditMessageId(null);\n    setEditedText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search messages...\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchMessages,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: (searchQuery ? filteredMessages : messages).map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-bubble\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 28\n          }, this), \": \", msg.message, \" \", msg.edited && \"(edited)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditMessageId(msg.id),\n          children: \"\\u270F\\uFE0F Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), editMessageId === msg.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedText,\n            onChange: e => setEditedText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editMessage(msg.id, editedText),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"TbN8gZLFuU4XKjiPQAPcSg25d9g=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Stomp","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatRoom","username","recipient","_s","messages","setMessages","searchQuery","setSearchQuery","filteredMessages","setFilteredMessages","editMessageId","setEditMessageId","editedText","setEditedText","searchMessages","response","fetch","data","json","editMessage","id","newText","method","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","message","edited","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport './ChatRoom.css';\r\n\r\nconst ChatRoom = ({ username, recipient }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredMessages, setFilteredMessages] = useState([]);\r\n    const [editMessageId, setEditMessageId] = useState(null);\r\n    const [editedText, setEditedText] = useState(\"\");\r\n\r\n    const searchMessages = async () => {\r\n        const response = await fetch(`http://localhost:8080/search?query=${searchQuery}`);\r\n        const data = await response.json();\r\n        setFilteredMessages(data);\r\n    };\r\n\r\n    const editMessage = async (id, newText) => {\r\n        await fetch(`http://localhost:8080/edit/${id}?newMessage=${newText}`, {\r\n            method: 'PUT'\r\n        });\r\n        setEditMessageId(null);\r\n        setEditedText(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search messages...\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n            />\r\n            <button onClick={searchMessages}>Search</button>\r\n\r\n            <div className=\"messages\">\r\n                {(searchQuery ? filteredMessages : messages).map((msg) => (\r\n                    <div key={msg.id} className=\"message-bubble\">\r\n                        <p><strong>{msg.username}</strong>: {msg.message} {msg.edited && \"(edited)\"}</p>\r\n                        <button onClick={() => setEditMessageId(msg.id)}>✏️ Edit</button>\r\n                        {editMessageId === msg.id && (\r\n                            <>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editedText}\r\n                                    onChange={(e) => setEditedText(e.target.value)}\r\n                                />\r\n                                <button onClick={() => editMessage(msg.id, editedText)}>Save</button>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMsB,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsCV,WAAW,EAAE,CAAC;IACjF,MAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCT,mBAAmB,CAACQ,IAAI,CAAC;EAC7B,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAOC,EAAE,EAAEC,OAAO,KAAK;IACvC,MAAML,KAAK,CAAC,8BAA8BI,EAAE,eAAeC,OAAO,EAAE,EAAE;MAClEC,MAAM,EAAE;IACZ,CAAC,CAAC;IACFX,gBAAgB,CAAC,IAAI,CAAC;IACtBE,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACIhB,OAAA;IAAK0B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B3B,OAAA;MACI4B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAErB,WAAY;MACnBsB,QAAQ,EAAGC,CAAC,IAAKtB,cAAc,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACFrC,OAAA;MAAQsC,OAAO,EAAErB,cAAe;MAAAU,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEhDrC,OAAA;MAAK0B,SAAS,EAAC,UAAU;MAAAC,QAAA,EACpB,CAAClB,WAAW,GAAGE,gBAAgB,GAAGJ,QAAQ,EAAEgC,GAAG,CAAEC,GAAG,iBACjDxC,OAAA;QAAkB0B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBACxC3B,OAAA;UAAA2B,QAAA,gBAAG3B,OAAA;YAAA2B,QAAA,EAASa,GAAG,CAACpC;UAAQ;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,MAAE,EAACG,GAAG,CAACC,OAAO,EAAC,GAAC,EAACD,GAAG,CAACE,MAAM,IAAI,UAAU;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChFrC,OAAA;UAAQsC,OAAO,EAAEA,CAAA,KAAMxB,gBAAgB,CAAC0B,GAAG,CAACjB,EAAE,CAAE;UAAAI,QAAA,EAAC;QAAO;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAChExB,aAAa,KAAK2B,GAAG,CAACjB,EAAE,iBACrBvB,OAAA,CAAAE,SAAA;UAAAyB,QAAA,gBACI3B,OAAA;YACI4B,IAAI,EAAC,MAAM;YACXE,KAAK,EAAEf,UAAW;YAClBgB,QAAQ,EAAGC,CAAC,IAAKhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,eACFrC,OAAA;YAAQsC,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACkB,GAAG,CAACjB,EAAE,EAAER,UAAU,CAAE;YAAAY,QAAA,EAAC;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eACvE,CACL;MAAA,GAZKG,GAAG,CAACjB,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaX,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAnDIH,QAAQ;AAAAwC,EAAA,GAARxC,QAAQ;AAqDd,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}