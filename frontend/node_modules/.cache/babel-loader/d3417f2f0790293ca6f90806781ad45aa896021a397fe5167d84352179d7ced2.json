{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  username,\n  recipient\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const stompClientRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const connectWebSocket = () => {\n      const socket = new SockJS(\"http://localhost:8080/chat\");\n      const client = Stomp.over(socket);\n      client.connect({}, () => {\n        console.log(\"‚úÖ Connected to WebSocket\");\n        const topic = recipient ? `/topic/private/${recipient}` : `/topic/messages`;\n        client.subscribe(topic, msg => {\n          const receivedMessage = JSON.parse(msg.body);\n          console.log(\"üì© Received message:\", receivedMessage);\n\n          // ‚úÖ Properly display both username and message\n          setMessages(prev => [...prev, {\n            username: receivedMessage.username || \"Unknown\",\n            message: receivedMessage.message || \"No message\"\n          }]);\n        });\n        stompClientRef.current = client;\n        setIsConnected(true);\n      }, error => {\n        console.error(\"‚ùå WebSocket connection failed:\", error);\n        setIsConnected(false);\n        setTimeout(connectWebSocket, 3000); // Retry every 3 sec\n      });\n    };\n    connectWebSocket();\n    return () => {\n      if (stompClientRef.current) {\n        stompClientRef.current.disconnect();\n        console.log(\"‚ùå Disconnected from WebSocket\");\n      }\n    };\n  }, [recipient]);\n  const sendMessage = () => {\n    if (stompClientRef.current && stompClientRef.current.connected) {\n      const chatMessage = {\n        username: username || \"Anonymous\",\n        message: message || \"Empty message\",\n        recipient: recipient || \"\"\n      };\n      stompClientRef.current.send(\"/app/sendMessage\", {}, JSON.stringify(chatMessage));\n      setMessage(\"\");\n    } else {\n      console.error(\"‚ùå WebSocket is not connected!\");\n      alert(\"Failed to send message. Connection not established.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: recipient ? `Private Chat with ${recipient}` : \"Group Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"300px\",\n        border: \"1px solid #ccc\",\n        padding: \"10px\"\n      },\n      children: isConnected ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), \" \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDD0C Connecting to WebSocket...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      disabled: !isConnected,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"WpkHCH19LW3axl9s9WYV3N7VqsY=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Stomp","jsxDEV","_jsxDEV","ChatRoom","username","recipient","_s","messages","setMessages","message","setMessage","stompClientRef","isConnected","setIsConnected","connectWebSocket","socket","client","over","connect","console","log","topic","subscribe","msg","receivedMessage","JSON","parse","body","prev","current","error","setTimeout","disconnect","sendMessage","connected","chatMessage","send","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","minHeight","border","padding","map","index","type","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\n\r\nconst ChatRoom = ({ username, recipient }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const stompClientRef = useRef(null);\r\n    const [isConnected, setIsConnected] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const connectWebSocket = () => {\r\n            const socket = new SockJS(\"http://localhost:8080/chat\");\r\n            const client = Stomp.over(socket);\r\n\r\n            client.connect(\r\n                {},\r\n                () => {\r\n                    console.log(\"‚úÖ Connected to WebSocket\");\r\n\r\n                    const topic = recipient \r\n                        ? `/topic/private/${recipient}` \r\n                        : `/topic/messages`;\r\n\r\n                    client.subscribe(topic, (msg) => {\r\n                        const receivedMessage = JSON.parse(msg.body);\r\n                        console.log(\"üì© Received message:\", receivedMessage);\r\n\r\n                        // ‚úÖ Properly display both username and message\r\n                        setMessages((prev) => [\r\n                            ...prev,\r\n                            {\r\n                                username: receivedMessage.username || \"Unknown\",\r\n                                message: receivedMessage.message || \"No message\"\r\n                            }\r\n                        ]);\r\n                    });\r\n\r\n                    stompClientRef.current = client;\r\n                    setIsConnected(true);  \r\n                },\r\n                (error) => {\r\n                    console.error(\"‚ùå WebSocket connection failed:\", error);\r\n                    setIsConnected(false);\r\n                    setTimeout(connectWebSocket, 3000);  // Retry every 3 sec\r\n                }\r\n            );\r\n        };\r\n\r\n        connectWebSocket();\r\n\r\n        return () => {\r\n            if (stompClientRef.current) {\r\n                stompClientRef.current.disconnect();\r\n                console.log(\"‚ùå Disconnected from WebSocket\");\r\n            }\r\n        };\r\n    }, [recipient]);\r\n\r\n    const sendMessage = () => {\r\n        if (stompClientRef.current && stompClientRef.current.connected) {\r\n            const chatMessage = {\r\n                username: username || \"Anonymous\",\r\n                message: message || \"Empty message\",\r\n                recipient: recipient || \"\"\r\n            };\r\n\r\n            stompClientRef.current.send(\r\n                \"/app/sendMessage\",\r\n                {},\r\n                JSON.stringify(chatMessage)\r\n            );\r\n\r\n            setMessage(\"\");\r\n        } else {\r\n            console.error(\"‚ùå WebSocket is not connected!\");\r\n            alert(\"Failed to send message. Connection not established.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>{recipient ? `Private Chat with ${recipient}` : \"Group Chat\"}</h2>\r\n            <div style={{ minHeight: \"300px\", border: \"1px solid #ccc\", padding: \"10px\" }}>\r\n                {isConnected ? (\r\n                    messages.map((msg, index) => (\r\n                        <p key={index}>\r\n                            <strong>{msg.username}:</strong> {msg.message}\r\n                        </p>\r\n                    ))\r\n                ) : (\r\n                    <p>üîå Connecting to WebSocket...</p>\r\n                )}\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder=\"Type a message...\"\r\n            />\r\n            <button onClick={sendMessage} disabled={!isConnected}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}