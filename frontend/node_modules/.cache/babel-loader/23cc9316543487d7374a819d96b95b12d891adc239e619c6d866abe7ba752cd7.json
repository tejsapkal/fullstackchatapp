{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Client } from '@stomp/stompjs';\nimport UserList from './UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const [client, setClient] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const stompClient = new Client({\n      brokerURL: 'ws://localhost:8080/ws',\n      onConnect: () => {\n        stompClient.subscribe('/topic/messages', msg => {\n          const newMessage = JSON.parse(msg.body);\n          setMessages(prev => [...prev, newMessage]);\n        });\n        stompClient.subscribe('/topic/users', msg => {\n          const activeUsers = JSON.parse(msg.body);\n          setUsers(activeUsers);\n        });\n      }\n    });\n    stompClient.activate();\n    setClient(stompClient);\n    return () => stompClient.deactivate();\n  }, []);\n  const sendMessage = () => {\n    if (client && message.trim()) {\n      client.publish({\n        destination: '/app/chat',\n        body: JSON.stringify({\n          sender: 'User',\n          content: message\n        })\n      });\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.sender, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"Yh7x45pWGT06jpGmmJV/pidwiFI=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","Client","UserList","jsxDEV","_jsxDEV","ChatRoom","_s","client","setClient","message","setMessage","messages","setMessages","users","setUsers","stompClient","brokerURL","onConnect","subscribe","msg","newMessage","JSON","parse","body","prev","activeUsers","activate","deactivate","sendMessage","trim","publish","destination","stringify","sender","content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Client } from '@stomp/stompjs';\r\nimport UserList from './UserList';\r\n\r\nconst ChatRoom = () => {\r\n  const [client, setClient] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const stompClient = new Client({\r\n      brokerURL: 'ws://localhost:8080/ws',\r\n      onConnect: () => {\r\n        stompClient.subscribe('/topic/messages', (msg) => {\r\n          const newMessage = JSON.parse(msg.body);\r\n          setMessages((prev) => [...prev, newMessage]);\r\n        });\r\n        stompClient.subscribe('/topic/users', (msg) => {\r\n          const activeUsers = JSON.parse(msg.body);\r\n          setUsers(activeUsers);\r\n        });\r\n      },\r\n    });\r\n\r\n    stompClient.activate();\r\n    setClient(stompClient);\r\n\r\n    return () => stompClient.deactivate();\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    if (client && message.trim()) {\r\n      client.publish({\r\n        destination: '/app/chat',\r\n        body: JSON.stringify({ sender: 'User', content: message })\r\n      });\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <UserList users={users} />\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <div key={index}>\r\n            <b>{msg.sender}: </b>{msg.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}