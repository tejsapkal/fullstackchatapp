{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Client } from '@stomp/stompjs';\nimport './ChatRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [username] = useState(localStorage.getItem('username') || '');\n  const [message, setMessage] = useState('');\n  const [client, setClient] = useState(null);\n  useEffect(() => {\n    const stompClient = new Client({\n      brokerURL: 'ws://localhost:8080/chat/websocket',\n      // ✅ Correct WebSocket URL\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log('Connected to WebSocket');\n\n        // Subscribe to message topic\n        stompClient.subscribe('/topic/messages', msg => {\n          const receivedMessage = JSON.parse(msg.body);\n          console.log('Received:', receivedMessage);\n\n          // Append received messages\n          setMessages(prevMessages => [...prevMessages, receivedMessage]);\n        });\n      },\n      onDisconnect: () => {\n        console.log('Disconnected from WebSocket');\n      }\n    });\n    stompClient.activate();\n    setClient(stompClient);\n    return () => stompClient.deactivate();\n  }, []);\n  const sendMessage = () => {\n    if (client && message.trim()) {\n      const chatMessage = {\n        sender: username,\n        content: message\n      };\n\n      // Publish message to the backend\n      client.publish({\n        destination: '/app/sendMessage',\n        // ✅ Send to backend mapping\n        body: JSON.stringify(chatMessage)\n      });\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"iPeb73VTUO5TBAOLUVslFn9gjSc=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","Client","jsxDEV","_jsxDEV","ChatRoom","_s","messages","setMessages","username","localStorage","getItem","message","setMessage","client","setClient","stompClient","brokerURL","reconnectDelay","onConnect","console","log","subscribe","msg","receivedMessage","JSON","parse","body","prevMessages","onDisconnect","activate","deactivate","sendMessage","trim","chatMessage","sender","content","publish","destination","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Client } from '@stomp/stompjs';\r\nimport './ChatRoom.css';\r\n\r\nconst ChatRoom = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [username] = useState(localStorage.getItem('username') || '');\r\n    const [message, setMessage] = useState('');\r\n    const [client, setClient] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const stompClient = new Client({\r\n            brokerURL: 'ws://localhost:8080/chat/websocket',  // ✅ Correct WebSocket URL\r\n            reconnectDelay: 5000,\r\n            onConnect: () => {\r\n                console.log('Connected to WebSocket');\r\n\r\n                // Subscribe to message topic\r\n                stompClient.subscribe('/topic/messages', (msg) => {\r\n                    const receivedMessage = JSON.parse(msg.body);\r\n                    console.log('Received:', receivedMessage);\r\n\r\n                    // Append received messages\r\n                    setMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n                });\r\n            },\r\n            onDisconnect: () => {\r\n                console.log('Disconnected from WebSocket');\r\n            }\r\n        });\r\n\r\n        stompClient.activate();\r\n        setClient(stompClient);\r\n\r\n        return () => stompClient.deactivate();\r\n    }, []);\r\n\r\n    const sendMessage = () => {\r\n        if (client && message.trim()) {\r\n            const chatMessage = {\r\n                sender: username,\r\n                content: message\r\n            };\r\n\r\n            // Publish message to the backend\r\n            client.publish({\r\n                destination: '/app/sendMessage',   // ✅ Send to backend mapping\r\n                body: JSON.stringify(chatMessage)\r\n            });\r\n\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-room\">\r\n            <div className=\"user-list\">\r\n                <h3>Active Users</h3>\r\n                <p>{username}</p>\r\n            </div>\r\n            <div className=\"message-list\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className=\"message\">\r\n                        <strong>{msg.sender}:</strong> {msg.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"message-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}