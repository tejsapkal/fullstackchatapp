{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  username\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const stompClientRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/chat\");\n    const client = Stomp.over(socket);\n    client.connect({}, () => {\n      console.log(\"Connected to WebSocket!\");\n      setIsConnected(true);\n      client.subscribe(\"/topic/messages\", msg => {\n        const receivedMessage = JSON.parse(msg.body);\n        console.log(\"Received message:\", receivedMessage); // Debug message data\n        setMessages(prev => [...prev, receivedMessage]);\n      });\n      stompClientRef.current = client;\n    });\n    return () => {\n      if (stompClientRef.current) {\n        stompClientRef.current.disconnect();\n      }\n    };\n  }, []);\n  const sendMessage = () => {\n    if (isConnected && stompClientRef.current) {\n      const chatMessage = {\n        username: username,\n        message: message\n      };\n      stompClientRef.current.send(\"/app/sendMessage\", {}, JSON.stringify(chatMessage));\n      setMessage(\"\");\n    } else {\n      console.error(\"WebSocket not connected!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"300px\",\n        border: \"1px solid #ccc\",\n        padding: \"10px\"\n      },\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages yet...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [(msg === null || msg === void 0 ? void 0 : msg.username) || \"Unknown\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), \" \", (msg === null || msg === void 0 ? void 0 : msg.message) || \"No message\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      disabled: !isConnected,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), !isConnected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Connecting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"WpkHCH19LW3axl9s9WYV3N7VqsY=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Stomp","jsxDEV","_jsxDEV","ChatRoom","username","_s","messages","setMessages","message","setMessage","stompClientRef","isConnected","setIsConnected","socket","client","over","connect","console","log","subscribe","msg","receivedMessage","JSON","parse","body","prev","current","disconnect","sendMessage","chatMessage","send","stringify","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","minHeight","border","padding","length","map","index","type","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\n\r\nconst ChatRoom = ({ username }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    \r\n    const stompClientRef = useRef(null);\r\n    const [isConnected, setIsConnected] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const socket = new SockJS(\"http://localhost:8080/chat\");\r\n        const client = Stomp.over(socket);\r\n\r\n        client.connect({}, () => {\r\n            console.log(\"Connected to WebSocket!\");\r\n            setIsConnected(true);\r\n\r\n            client.subscribe(\"/topic/messages\", (msg) => {\r\n                const receivedMessage = JSON.parse(msg.body);\r\n                console.log(\"Received message:\", receivedMessage);  // Debug message data\r\n                setMessages((prev) => [...prev, receivedMessage]);\r\n            });\r\n\r\n            stompClientRef.current = client;\r\n        });\r\n\r\n        return () => {\r\n            if (stompClientRef.current) {\r\n                stompClientRef.current.disconnect();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const sendMessage = () => {\r\n        if (isConnected && stompClientRef.current) {\r\n            const chatMessage = {\r\n                username: username,\r\n                message: message\r\n            };\r\n            stompClientRef.current.send(\"/app/sendMessage\", {}, JSON.stringify(chatMessage));\r\n            setMessage(\"\");\r\n        } else {\r\n            console.error(\"WebSocket not connected!\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Chat Room</h2>\r\n\r\n            {/* Display messages with defensive checks */}\r\n            <div style={{ minHeight: \"300px\", border: \"1px solid #ccc\", padding: \"10px\" }}>\r\n                {messages.length === 0 ? (\r\n                    <p>No messages yet...</p>\r\n                ) : (\r\n                    messages.map((msg, index) => (\r\n                        <p key={index}>\r\n                            <strong>{msg?.username || \"Unknown\"}:</strong> {msg?.message || \"No message\"}\r\n                        </p>\r\n                    ))\r\n                )}\r\n            </div>\r\n\r\n            <input \r\n                type=\"text\" \r\n                value={message} \r\n                onChange={(e) => setMessage(e.target.value)} \r\n                placeholder=\"Type a message...\"\r\n            />\r\n            <button onClick={sendMessage} disabled={!isConnected}>\r\n                Send\r\n            </button>\r\n            {!isConnected && <p>Connecting...</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}