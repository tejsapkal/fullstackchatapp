{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\REACT PROJECTS\\\\realtimechatapp\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport EmojiPicker from 'emoji-picker-react';\nimport './ChatRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  username,\n  recipient\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [profilePic, setProfilePic] = useState(null);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const stompClientRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const latestMessageRef = useRef(null);\n  useEffect(() => {\n    const connectWebSocket = () => {\n      const socket = new SockJS(\"http://localhost:8080/chat\");\n      const client = Stomp.over(socket);\n      client.connect({}, () => {\n        console.log(\"✅ Connected to WebSocket\");\n        const topic = recipient ? `/topic/private/${recipient}` : `/topic/messages`;\n        client.subscribe(topic, msg => {\n          const receivedMessage = JSON.parse(msg.body);\n          setMessages(prev => [...prev, {\n            username: receivedMessage.username,\n            message: receivedMessage.message,\n            timestamp: receivedMessage.timestamp || new Date().toLocaleTimeString(),\n            profilePic: receivedMessage.profilePic || null\n          }]);\n        });\n        stompClientRef.current = client;\n        setIsConnected(true);\n      });\n    };\n    connectWebSocket();\n    return () => {\n      if (stompClientRef.current) {\n        stompClientRef.current.disconnect();\n        console.log(\"❌ Disconnected from WebSocket\");\n      }\n    };\n  }, [recipient]);\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [messages]);\n\n  // 🛠️ FIX: Resize Image Before Sending\n  const handleProfilePicUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const img = new Image();\n      img.src = e.target.result;\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n\n        // Resize Image to 100x100 to reduce WebSocket message size\n        canvas.width = 100;\n        canvas.height = 100;\n        ctx.drawImage(img, 0, 0, 100, 100);\n\n        // Convert to Base64\n        const resizedImage = canvas.toDataURL(\"image/jpeg\", 0.7);\n        setProfilePic(resizedImage);\n      };\n    };\n    reader.readAsDataURL(file);\n  };\n  const sendMessage = () => {\n    if (!stompClientRef.current || !stompClientRef.current.connected) {\n      console.error(\"❌ WebSocket is not connected!\");\n      alert(\"Failed to send message. Connection not established.\");\n      return;\n    }\n    const chatMessage = {\n      username: username || \"Anonymous\",\n      message: message.trim() || \"Empty message\",\n      recipient: recipient || \"\",\n      timestamp: new Date().toLocaleTimeString(),\n      profilePic: profilePic || null // Now sending profile picture safely\n    };\n    stompClientRef.current.send(\"/app/sendMessage\", {}, JSON.stringify(chatMessage));\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: activeUsers.length > 0 ? activeUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No active users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: recipient ? `Private Chat with ${recipient}` : \"Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"profile-upload\",\n          children: [\"\\uD83D\\uDCF8 Upload Profile Picture\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleProfilePicUpload,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: index === messages.length - 1 ? latestMessageRef : null,\n          className: `message ${msg.username === username ? \"sent\" : \"received\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-pic\",\n            children: msg.profilePic ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: msg.profilePic,\n              alt: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-initials\",\n              children: msg.username.charAt(0).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: msg.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 36\n              }, this), \": \", msg.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: msg.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"emoji-btn\",\n          onClick: () => setShowEmojiPicker(prev => !prev),\n          children: \"\\uD83D\\uDE0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji-picker-container\",\n          children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n            onEmojiClick: emoji => setMessage(prev => prev + emoji.emoji)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          disabled: !isConnected,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"8RHceri0sWHyIj4A5C6kyBJtT2c=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Stomp","EmojiPicker","jsxDEV","_jsxDEV","ChatRoom","username","recipient","_s","messages","setMessages","message","setMessage","activeUsers","setActiveUsers","profilePic","setProfilePic","showEmojiPicker","setShowEmojiPicker","stompClientRef","isConnected","setIsConnected","latestMessageRef","connectWebSocket","socket","client","over","connect","console","log","topic","subscribe","msg","receivedMessage","JSON","parse","body","prev","timestamp","Date","toLocaleTimeString","current","disconnect","scrollIntoView","behavior","handleProfilePicUpload","event","file","target","files","reader","FileReader","onload","e","img","Image","src","result","canvas","document","createElement","ctx","getContext","width","height","drawImage","resizedImage","toDataURL","readAsDataURL","sendMessage","connected","error","alert","chatMessage","trim","send","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","user","index","type","accept","onChange","hidden","ref","alt","charAt","toUpperCase","onClick","onEmojiClick","emoji","value","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/REACT PROJECTS/realtimechatapp/src/components/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport './ChatRoom.css';\r\n\r\nconst ChatRoom = ({ username, recipient }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [profilePic, setProfilePic] = useState(null);\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n\r\n    const stompClientRef = useRef(null);\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const latestMessageRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const connectWebSocket = () => {\r\n            const socket = new SockJS(\"http://localhost:8080/chat\");\r\n            const client = Stomp.over(socket);\r\n\r\n            client.connect({}, () => {\r\n                console.log(\"✅ Connected to WebSocket\");\r\n\r\n                const topic = recipient ? `/topic/private/${recipient}` : `/topic/messages`;\r\n\r\n                client.subscribe(topic, (msg) => {\r\n                    const receivedMessage = JSON.parse(msg.body);\r\n\r\n                    setMessages((prev) => [\r\n                        ...prev,\r\n                        {\r\n                            username: receivedMessage.username,\r\n                            message: receivedMessage.message,\r\n                            timestamp: receivedMessage.timestamp || new Date().toLocaleTimeString(),\r\n                            profilePic: receivedMessage.profilePic || null\r\n                        }\r\n                    ]);\r\n                });\r\n\r\n                stompClientRef.current = client;\r\n                setIsConnected(true);\r\n            });\r\n        };\r\n\r\n        connectWebSocket();\r\n\r\n        return () => {\r\n            if (stompClientRef.current) {\r\n                stompClientRef.current.disconnect();\r\n                console.log(\"❌ Disconnected from WebSocket\");\r\n            }\r\n        };\r\n    }, [recipient]);\r\n\r\n    useEffect(() => {\r\n        if (latestMessageRef.current) {\r\n            latestMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, [messages]);\r\n\r\n    // 🛠️ FIX: Resize Image Before Sending\r\n    const handleProfilePicUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) return;\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const img = new Image();\r\n            img.src = e.target.result;\r\n            img.onload = () => {\r\n                const canvas = document.createElement(\"canvas\");\r\n                const ctx = canvas.getContext(\"2d\");\r\n\r\n                // Resize Image to 100x100 to reduce WebSocket message size\r\n                canvas.width = 100;\r\n                canvas.height = 100;\r\n                ctx.drawImage(img, 0, 0, 100, 100);\r\n\r\n                // Convert to Base64\r\n                const resizedImage = canvas.toDataURL(\"image/jpeg\", 0.7);\r\n                setProfilePic(resizedImage);\r\n            };\r\n        };\r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (!stompClientRef.current || !stompClientRef.current.connected) {\r\n            console.error(\"❌ WebSocket is not connected!\");\r\n            alert(\"Failed to send message. Connection not established.\");\r\n            return;\r\n        }\r\n\r\n        const chatMessage = {\r\n            username: username || \"Anonymous\",\r\n            message: message.trim() || \"Empty message\",\r\n            recipient: recipient || \"\",\r\n            timestamp: new Date().toLocaleTimeString(),\r\n            profilePic: profilePic || null,  // Now sending profile picture safely\r\n        };\r\n\r\n        stompClientRef.current.send(\"/app/sendMessage\", {}, JSON.stringify(chatMessage));\r\n        setMessage(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"sidebar\">\r\n                <h3>Active Users</h3>\r\n                <ul>\r\n                    {activeUsers.length > 0 ? (\r\n                        activeUsers.map((user, index) => (\r\n                            <li key={index}>{user}</li>\r\n                        ))\r\n                    ) : (\r\n                        <li>No active users</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"chat-box\">\r\n                <div className=\"chat-header\">\r\n                    <h2>{recipient ? `Private Chat with ${recipient}` : \"Group Chat\"}</h2>\r\n                    <label className=\"profile-upload\">\r\n                        📸 Upload Profile Picture\r\n                        <input type=\"file\" accept=\"image/*\" onChange={handleProfilePicUpload} hidden />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"messages\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} ref={index === messages.length - 1 ? latestMessageRef : null} className={`message ${msg.username === username ? \"sent\" : \"received\"}`}>\r\n                            <div className=\"profile-pic\">\r\n                                {msg.profilePic ? (\r\n                                    <img src={msg.profilePic} alt=\"Profile\" />\r\n                                ) : (\r\n                                    <div className=\"profile-initials\">\r\n                                        {msg.username.charAt(0).toUpperCase()}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"message-bubble\">\r\n                                <p><strong>{msg.username}</strong>: {msg.message}</p>\r\n                                <small>{msg.timestamp}</small>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"input-container\">\r\n                    <button className=\"emoji-btn\" onClick={() => setShowEmojiPicker((prev) => !prev)}>\r\n                        😊\r\n                    </button>\r\n\r\n                    {showEmojiPicker && (\r\n                        <div className=\"emoji-picker-container\">\r\n                            <EmojiPicker onEmojiClick={(emoji) => setMessage((prev) => prev + emoji.emoji)} />\r\n                        </div>\r\n                    )}\r\n\r\n                    <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type a message...\" />\r\n                    <button onClick={sendMessage} disabled={!isConnected}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}